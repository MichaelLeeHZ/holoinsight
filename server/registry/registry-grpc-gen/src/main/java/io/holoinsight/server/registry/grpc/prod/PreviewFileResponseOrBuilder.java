/*
 * Copyright 2022 Holoinsight Project Authors. Licensed under Apache-2.0.
 */
// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: registry-for-prod.proto

package io.holoinsight.server.registry.grpc.prod;

public interface PreviewFileResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:io.holoinsight.server.registry.grpc.prod.PreviewFileResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.io.holoinsight.server.common.grpc.CommonResponseHeader header = 1;</code>
   */
  boolean hasHeader();

  /**
   * <code>.io.holoinsight.server.common.grpc.CommonResponseHeader header = 1;</code>
   */
  io.holoinsight.server.common.grpc.CommonResponseHeader getHeader();

  /**
   * <code>.io.holoinsight.server.common.grpc.CommonResponseHeader header = 1;</code>
   */
  io.holoinsight.server.common.grpc.CommonResponseHeaderOrBuilder getHeaderOrBuilder();

  /**
   * <pre>
   * 解析好的日志行
   * </pre>
   *
   * <code>repeated string content = 2;</code>
   */
  java.util.List<java.lang.String> getContentList();

  /**
   * <pre>
   * 解析好的日志行
   * </pre>
   *
   * <code>repeated string content = 2;</code>
   */
  int getContentCount();

  /**
   * <pre>
   * 解析好的日志行
   * </pre>
   *
   * <code>repeated string content = 2;</code>
   */
  java.lang.String getContent(int index);

  /**
   * <pre>
   * 解析好的日志行
   * </pre>
   *
   * <code>repeated string content = 2;</code>
   */
  com.google.protobuf.ByteString getContentBytes(int index);

  /**
   * <pre>
   * 日志使用的编码
   * 如果用户请求里没有提供编码, 那么此时该编码是猜测的编码
   * </pre>
   *
   * <code>string charset = 3;</code>
   */
  java.lang.String getCharset();

  /**
   * <pre>
   * 日志使用的编码
   * 如果用户请求里没有提供编码, 那么此时该编码是猜测的编码
   * </pre>
   *
   * <code>string charset = 3;</code>
   */
  com.google.protobuf.ByteString getCharsetBytes();
}
